GAMS 25.1.2  r67455 Released Aug  1, 2018 WEX-WEI x86 64bit/MS Windows - 09/07/18 15:46:19 Page 1
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


   1  sets
   2      crude   /CRD1,CRD2/
   3      distil  / LN,MN,HN,LO,HO,RES/
   4      reform(distil) /LN,MN,HN/
   5      cracking(distil) /LO,HO,RES/
   6      intermediates /RGAS, COIL,CGAS,LOIL/
   7      gasblendD(distil)/LN,MN,HN/
   8      jetblendD(distil)   /LO,HO,RES/
   9      fuelblendD(distil) / LO, HO, RES/
  10      gasblendI(intermediates) /RGAS,CGAS/
  11      jetblendI(intermediates) / COIL/
  12      fuelblendI(intermediates) /COIL/
  13      gasoline    /REG,PRE/
  14      ;
  15   
  16   
  17  parameters
  18      octaneD(gasblendD) / LN 90, MN 80, HN 70/
  19      octaneI(gasblendI) /RGAS 115, CGAS 105/
  20      octane(gasoline) /REG 84 , PRE 94/
  21      vapPresD(jetblendD) /LO 1.0,HO 0.6, RES 0.05/
  22      vapPresI(jetblendI) / COIL 1.5/
  23   
  24      ;
  25   
  26  table Dratio(crude,distil)
  27           LN      MN      HN      LO      HO      RES
  28  CRD1     0.1     0.2     0.2     0.12    0.2     0.13
  29  CRD2     0.15    0.25    0.18    0.08    0.19    0.12
  30  ;
  31   
  32  parameter yieldRef(distil) 'yield in reforming' /LN 0.6 , MN 0.52, HN 0.45/ ;
  33   
  34  table yieldcrack(cracking,intermediates)
  35      COIL    CGAS    LOIL
  36  LO  0.68    0.28
  37  HO  0.75    0.2
  38  RES                 0.5
  39  ;
  40  positive variables
  41      mCrude(crude)       'mass of crude'
  42      mDistil(distil)        'mass of distillation products'
  43      mReform(distil)     'mass of distillation products to reformer'
  44      mCrack(distil)      'mass of distillation products to cracking'
  45      mGasblendD(distil)       "mass of distialltion product to gasoline blending"
  46      mJetblendD(distil)   'mass of distillation product to jet ful blending'
  47      mFuelblendD(distil)  'mass of distillation product to fuel oil blending'
  48      mInter(intermediates) 'mass of intermediates produced'
  49      mGasblendI(intermediates) 'mass of intermediates for gasoline blending'
  50      mJetblendI(intermediates) 'mass of intermediates for jet fuel blending'
  51      mFuelblendI(intermediates) 'mass of intermediates fuel oil blending'
  52   
  53      mGasblendPRE
  54      mGasblendREG
  55      mGasSell(gasoline)    'mass of gasoline produced'
  56      mJetfuel
  57      mFueloil
  58      mLOILsell
  59      ;
  60  variable profit
  61      ;
  62   
  63  mCrude.up('CRD1') = 20000;
  64  mCrude.up('CRD2') = 30000;
  65  mInter.up('LOIL') = 1000;
  66  mInter.lo('LOIL') = 500;
  67   
  68   
  69   
  70  equation
  71      distillation(distil) "mass balance for distillation"
  72      massbalance1(distil) "mass balance for distiallates between processes"
  73      mbalreform(intermediates)           'mass balance for reforming'
  74      mbalcrack(intermediates)
  75  *    mbalGasblend(gasoline)
  76   
  77      massbalance2(intermediates) "mass balance for intermediates between processses"
  78      gasblending         "mass balance inside gas blender"
  79      gasblendratio   "ratio of PRE to REG"
  80      jetblending     "mass balance jetfuel blending"
  81      fuelblending    "mass balance fuel oil blending"
  82      decisions
  83      distillimit     "limit on crude distillation capacity"
  84      reformlimit     "limit on crude distillation capacity"
  85      cracklimit      "limit on crude distillation capacity"
  86      ;
  87   
  88   
  89  distillation(distil).. mDistil(distil) =e= sum(crude,Dratio(crude,distil)*mCrude(crude))    ;
  90   
  91   
  92  massbalance1(distil).. mDistil(distil) =e= mReform(distil)$reform(distil) + mCrack(distil)$cracking(distil)
  93                                             +  mGasblendD(distil)$gasblendD(distil) +mJetblendD(distil)$jetblendD(distil)
  94                                               + mFuelblendD(distil)$fuelblendD(distil)  ;
  95   
  96  mbalreform(intermediates)$(ord(intermediates)=1).. mInter(intermediates) =e= sum(distil, mReform(distil)* yieldRef(distil));
  97   
  98  mbalcrack(intermediates)$(ord(intermediates)>1).. mInter(intermediates) =e=
  99                                                      sum(cracking, mCrack(cracking)*yieldcrack(cracking,intermediates));
 100   
 101   
      mbalGasblend(gasoline).. sum((gasoline),mGassell(gasoline)) =e=
                                                  sum(distil,mGasblendD(distil)) + sum(gasblendI,mInter(gasblendI))
 106   
 107   
 108  massbalance2(intermediates).. mInter(intermediates) =e= mGasblendI(intermediates)$gasblendI(intermediates)
 109                                                              +  mJetblendI(intermediates)$jetblendI(intermediates)
 110                                                              + mFuelblendI(intermediates)$fuelblendI(intermediates)
 111                                                              + mLOILsell$(ord(intermediates) = 4);
 112   
 113  *gasoline production
 114   
 115  gasblending(gasoline).. mGasSell(gasoline)*octane(gasoline) =e= sum(gasblendD,mGasblendD(gasblendD,gasoline)*octaneD(gasblendD)) +
****                                                                                                             $148
**** 148  Dimension different - The symbol is referenced with more/less
****         indices as declared
 116                                                                  sum(gasblendI,mGasblendI(gasblendI,gasoline)*octaneI(gasblendI)) ;
****                                                                                                             $148
**** 148  Dimension different - The symbol is referenced with more/less
****         indices as declared
 117   
 118   
 119   
 120  gasblendratio.. mGassell('PRE') =g= 0.4 * mGassell('REG');
 121   
 122  jetblending.. mJetfuel =l= sum(jetblendD,mJetblendD(jetblendD)*vapPresD(jetblendD))
 123                                                          + sum(jetblendI,mJetblendI(jetblendI)*vapPresI(jetblendI)) ;
 124   
 125  fuelblending.. 18* mFueloil =e= 10*mFuelblendD('LO') + 3*mFuelblendD('HO') + mFuelblendD('RES') + mFuelblendI('COIL')*4 ;
 126   
 127  distillimit.. sum(crude,mCrude(crude)) =l= 45000;
 128   
 129  reformlimit.. sum(reform,mReform(reform)) =l= 10000 ;
 130   
 131  cracklimit.. sum(cracking,mCrack(cracking)) =l= 8000;
 132   
 133  decisions.. profit =e= mGassell('PRE')*700 + mGassell('REG')*600 + mJetfuel*400 + mFueloil*350 + mLOILsell* 150;
 134   
 135  model refinery /all/
 136   
 137  option limrow =10;
 138   
 139  solve refinery using LP maximizing profit;
****                                           $257
**** 257  Solve statement not checked because of previous errors
 140   
 141   
 142   

**** 3 ERROR(S)   0 WARNING(S)


COMPILATION TIME     =        0.000 SECONDS      3 MB  25.1.2 r67455 WEX-WEI


USER: Chintan Bhomia, Single User License            G180612/0001CN-GEN
      GAMS Development, Fairfax                                 DC14199


**** FILE SUMMARY

Input      C:\Users\cnbho\Documents\GitHub\HPW\refinery\refinery.gms
Output     C:\Users\cnbho\Documents\GitHub\HPW\refinery\refinery.lst

**** USER ERROR(S) ENCOUNTERED
